services:

#  newt:
#    image: fosrl/newt
#    container_name: newt
#   restart: unless-stopped
#    environment:
#      - PANGOLIN_ENDPOINT=https://pangolin.saaro.net
#      - NEWT_ID=${NEWT_ID}
#      - NEWT_SECRET=${NEWT_SECRET}
#      - TARGET_HOST=frontend
#      - TARGET_PORT=80
#    networks:
#      - app_network
#    depends_on:
#      - frontend

#  postgres:
#    image: postgres:16-alpine
#    restart: unless-stopped
#    ports:
#      - "0.0.0.0:5432:5432"
#    environment:
#      - POSTGRES_USER
#      - POSTGRES_PASSWORD
#      - POSTGRES_DB
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#    healthcheck:
#      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
#      interval: 5s
#      timeout: 5s
#      retries: 10

  ollama:
    build: 
      context: ./infrastructure
      dockerfile: Dockerfile.ollama
    container_name: asra_ollama
    devices:
      - /dev/kfd:/dev/kfd
      - /dev/dri:/dev/dri
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    restart: always
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_KEEP_ALIVE=5m
      - GOMAXPROCS=4
      - OLLAMA_BENCHMARK=false
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: 8G
    ulimits:
      memlock: -1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 60s
      timeout: 10s
      retries: 3

  openwebui:
    image: ghcr.io/open-webui/open-webui
    container_name: openwebui
    ports:
      - "8080:8080"
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
    volumes:
      - openwebui_data:/app/backend/data:rw
    restart: unless-stopped

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    restart: unless-stopped
    ports:
      - "0.0.0.0:6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage

  solr:
    image: solr:9.4
    container_name: solr_server
    ports:
      - "8983:8983"
    volumes:
      - solr_data:/var/solr
      - ./docker/solr/configsets:/configsets
    command:
      - solr-precreate
      - documents
      - /configsets/documents
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8983/solr/"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      SOLR_OPTS: "-Dsolr.jetty.request.header.size=65535"
    networks:
      - app_network
      
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: asra_frontend
    ports:
      - "3000:80"
    depends_on:
      solr:
        condition: service_healthy
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  ollama_data:
  openwebui_data:
  qdrant_data:
  postgres_data:
  solr_data:
    driver: local
